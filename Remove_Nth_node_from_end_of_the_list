class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        ListNode* dummy = new ListNode(0); // Create a dummy node to handle edge cases
        dummy->next = head;
        ListNode* first = dummy;
        ListNode* second = dummy;
        
        // Move first pointer n+1 steps ahead
        for (int i = 0; i <= n; ++i) {
            if (first == nullptr) return nullptr; // Handle cases where n is greater than the list size
            first = first->next;
        }
        
        // Move first and second pointers simultaneously until first reaches the end
        while (first != nullptr) {
            first = first->next;
            second = second->next;
        }
        
        // Remove the nth node from the end by adjusting pointers
        ListNode* temp = second->next;
        second->next = second->next->next;
        delete temp; // Free the memory
        
        ListNode* result = dummy->next;
        delete dummy; // Free the dummy node
        return result;
    }
};
